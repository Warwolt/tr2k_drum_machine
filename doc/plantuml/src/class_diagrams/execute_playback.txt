@startuml

skinparam linetype ortho

title Execute Playback


''' Class definitions '''

Package "Presentation"
{
	class PlaybackPositionView
	{
		handlePlaybackStep()
	}
}

Package "Application"
{
	class PatternEditController
	{
		selectedInstrumentId : Integer

		getSelectedInstrumentId() : InstrumentId
		selectInstrumentForEditing(InstrumentId)
	}

	class RhythmPlaybackController
	{
		getPatternPlaybackPosition(InstrumentId) : Integer
	}
}

Package "Domain"
{
	Package "Playback"
	{
		class PlaybackTimingManager
		{
			addSubscriber(PlaybackTimingSubscriber)
			handlePlayback()
		}

		interface PlaybackTimingSubscriber
		{
			handlePlaybackStep()
		}

		class InstrumentPlaybackManager
		{
			handlePlaybackStep()
		}

		interface TempoTimer
		{
			playbackStepIsDue() : Boolean
		}

		class PlaybackActionManager
		{
			playbackActions : List<CallbackFunction>
			setActionForInstrument(CallbackFunction, InstrumentId)
			executePlaybackAction(InstrumentId)
		}
	}

	Package "RhythmPattern"
	{
		class RhythmPatternManager
		{
			currentStepActiveInPattern(InstrumentId) : Boolean
			getPatternPlaybackPosition(InstrumentId) : Integer
			advanceAllPlaybackPositions()
		}
	}
}

Package "HardwareAbstractionLayer"
{
	interface LedGroup
	{
		turnOn(LedNumber)
		turnOff(LedNumber)
		blinkLed(LedNumber, Milliseconds)
	}
}

''' Class relations '''

PlaybackTimingManager --> TempoTimer
PlaybackTimingManager --> PlaybackTimingSubscriber

PlaybackTimingSubscriber <|.. InstrumentPlaybackManager
PlaybackTimingSubscriber <|.. PlaybackPositionView

InstrumentPlaybackManager -left-> RhythmPatternManager
InstrumentPlaybackManager --> PlaybackActionManager

PlaybackPositionView --> PatternEditController
PlaybackPositionView --> RhythmPlaybackController
PlaybackPositionView --> LedGroup

RhythmPlaybackController --> RhythmPatternManager

@enduml
