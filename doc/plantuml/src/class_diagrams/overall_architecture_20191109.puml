@startuml

' skinparam linetype ortho

title Overall Step Sequencer MVC-Architecture

''' Class definitions '''
package Presentation
{
    class TempoControlView
    {
        handleTempoControl()
    }

    class PlaybackTransportView
    {
        handleTransportControl()
    }

    class RhythmEditView
    {
        handleRhythmEditing()
    }

    class TempoKnob
    {
        read() : BeatsPerMinute
    }

    class DigitalTempoKnob
    {
        read() : BeatsPerMinute
    }
}

package Application
{
    class RhythmPlaybackController
    {
        setTempo(bpm : BeatsPerMinute)
	    restartPlayback()
	    stopPlayback()
	    continuePlayback()
    }

    class RhythmEditController
    {
        selectActivePattern(patternNum : int)
        toggleActivePatternStep(stepNum : int)
        getActivePatternState() : PatternState
        clearActivePattern()
    }
}

package Domain
{
    ' note left of PlaybackChannelManager : Handles outputing trigger signals
    class PlaybackChannelManager
    {
        outputSignal(channelNum : int)
    }

    ' note right of RhythmPatternManager : Stores programmed rhythms
    class RhythmPatternManager
    {
        patternStepIsActive(patternNum : int, stepNum : int) : bool
        toggleStepInPattern(patternNum : int, stepNum : int)
        clearPattern(patternNum : int)
        incrementAllPlaybackPositions()
        resetAllPlaybackackPositions()
    }

    ' note left of PlaybackStepHandler : Handles a single playback step\n(including but not limited to outputing signals)
    class PlaybackStepHandler <<callback function>>
    {
        handlePlaybackStep()
    }

    ' note right of TempoTimer : Keeps track of when 16th notes occur
    interface TempoTimer
    {
        setTempo(BeatsPerMinute)
        start()
        stop()
        clear()
        playbackStepIsDue() : bool
        startCountingNextStep()
    }

    class TempoTimer16Bit
    {
        setTempo(BeatsPerMinute bpm)
        start()
        stop()
        clear()
        countPulse()
        playbackStepIsDue() : bool
        startCountingNextStep()
    }

    ' note left of TempoTimingManager : Coordinates playback handling with tempo
    class TempoTimingManager
    {
        addPlaybackStepHandler(handler : PlaybackStepHandler)
        handlePlayback()
    }
}

package HardwareAbstractionLayer
{
    interface ButtonGroup
    {
        getNumButtons() : int
        buttonPressedNow(u8 buttonNum) : bool
        buttonReleasedNow(u8 buttonNum) : bool
        buttonIsUp(u8 buttonNum) : bool
        buttonIsDown(u8 buttonNum) : bool
    }

    interface LedGroup
    {
        getNumLeds() : int
        setLed(ledNum : int)
        clearLed(ledNum : int)
        toggleLed(ledNum : int)
    }

    interface FourDigitDisplay
    {
	    setNumberToDisplay(number : int)
	    enableDecimalPoint(digit : int)
	    disableDecimalPoint(digit : int)
    }

    class CharlieplexMappedLedGroup
    class MatrixMappedButtonGroup

    interface Timer16bit
    {
        setPrescaler(prescaler : PrescaleOption)
        setPeriod(period : int)
        start()
        stop()
        clear()
    }
}

Package Driver
{
    class CharlieplexMatrix
    class GpioMatrix

    class GpioPin
    {
        setDirection(dir : GpioPinDirection)
        set()
        clear()
        toggle()
    }

    class RotaryEncoder
    {
	    handleEdge()
	    setRotationCeiling(ceil : int)
	    setRotationFloor(floor : int)
	    getNumRotations() : int
    }

    class SegmentDisplay74HC595
    class Spi
    class Timer1
}

''' Package relations '''
Presentation -[hidden]down-> Application
Presentation -[hidden]down-> HardwareAbstractionLayer
Application -[hidden]down-> Domain

''' Class relations '''
' Views '
TempoControlView -down-> RhythmPlaybackController
TempoControlView -down-> FourDigitDisplay
TempoControlView -down-> TempoKnob
TempoKnob <|.down. DigitalTempoKnob
DigitalTempoKnob -down-> RotaryEncoder
PlaybackTransportView -down-> RhythmPlaybackController
PlaybackTransportView -down-> ButtonGroup
RhythmEditView -down-> RhythmEditController
RhythmEditView -down-> ButtonGroup
RhythmEditView -down-> LedGroup

' Controllers '
RhythmPlaybackController -down-> TempoTimer
RhythmPlaybackController -down-> RhythmPatternManager
RhythmEditController -down-> RhythmPatternManager

' Domain '
TempoTimingManager *-down->"1..*" PlaybackStepHandler
TempoTimingManager -down-> TempoTimer
PlaybackStepHandler -down-> PlaybackChannelManager
PlaybackStepHandler -down-> RhythmPatternManager

' Hardware Abstraction Layer '
LedGroup <|.down. CharlieplexMappedLedGroup
ButtonGroup <|.down. MatrixMappedButtonGroup
CharlieplexMappedLedGroup -down-> CharlieplexMatrix
MatrixMappedButtonGroup -down-> GpioMatrix
FourDigitDisplay <|.down. SegmentDisplay74HC595
SegmentDisplay74HC595 -down-> Spi
TempoTimer <|.down. TempoTimer16Bit
TempoTimer16Bit -down-> Timer16bit

' Driver '
CharlieplexMatrix -down-> GpioPin
GpioMatrix -down-> GpioPin
RotaryEncoder -down-> GpioPin
Timer16bit <|.down. Timer1

@enduml
